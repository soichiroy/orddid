% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orddid.R
\name{ord_did}
\alias{ord_did}
\title{Ordinal Difference-in-Differences for Panel Data}
\usage{
ord_did(
  Ynew,
  Yold,
  treat,
  id_cluster = NULL,
  cut = c(0, 1),
  n_boot = 500,
  pre = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{Ynew}{A numeric vector of ordinal outcome for the post-treatment period.}

\item{Yold}{A numeric vector of ordinal outcome for the pre-treatment period.}

\item{treat}{A numeric vector of treatment indicator.
The treatment group should take 1 and the control group should take 0.}

\item{id_cluster}{A vector of cluster id.
If left as \code{NULL}, bootstrap is implemented at the individual level.}

\item{cut}{A vector of cutoffs. Two numeric values should be specified. Default is \code{cut = c(0, 1)}.}

\item{n_boot}{The number of boostrapt iterations for estimating the variance. Default is \code{n_boot = 500}.}

\item{pre}{A boolean argument used to indicate if the data comes entirely from pre-treatment periods.
This should be \code{TRUE} when the output is supplied to \code{\link{equivalence_test}}.}

\item{verbose}{If \code{TRUE}, print the progress of bootstrap iterations.}
}
\value{
\code{ord_did()} returns a list of class `orddid' containing the following components:
\item{fit}{A list with the output of the ordinal DID estimators,
           which contains parameter estimates and predicted probabilities for each category.}
\item{boot}{A list with the output of bootstraps,
            which contains parameter estimates and predicted probabilities for each category.}
\item{boot_params}{A list with all objects generated during the bootstrap step.}
}
\description{
\code{ord_did()} implements the difference-in-differences for the ordinal outcome.
}
\examples{
\donttest{
## load packages
library(orddid)
library(dplyr)

## load example data
data("gun_twowave")

## run
## fit the ordinal DID
set.seed(1234)
fit <- ord_did(
  Ynew = gun_twowave \%>\% filter(year == 2012) \%>\% pull(guns),
  Yold = gun_twowave \%>\% filter(year == 2010) \%>\% pull(guns),
  treat = gun_twowave \%>\% filter(year == 2012) \%>\% pull(treat_100mi),
  id_cluster = gun_twowave \%>\% filter(year == 2010) \%>\% pull(reszip),
  n_boot = 10,
  pre = FALSE,
  verbose = FALSE
)

## view summary of the output
## non-cumulative effects
summary(fit, cumulative = FALSE)

## cumulative effects
summary(fit)
}
}
